log4js 是 Node.js 日志处理中的数一数二的模块。比起 console 或者 TJ 的 debug 有其优势，尤其针对投入生产的 Node.js 项目来说下面这些是不可少的：
1. 日志分级
2. 日志分类
3. 日志落盘

最简单的应用：
var log4js=require(‘log4js’)
var logger=log4js.getLogger(param) #param为config文件中的category属性的值
logger.debug(“time:”,new Date())
调用 .getLogger() 可以获得 log4js 的 Logger 实例，这个实例的用法与 console 是一致的，可以调用 .debug （也有 .info 、 .error 等方法）来输出日志。

log4js的概念：
Level 级别
	日志分级 共ALL<TRACE<DEBUG<INFO<WARN<ERROR<MARK<OFF,default level is OFF
category 类型
appender
	日志的出口由appender决定，有filename的情况下不用appender属性

进一步例子：
var log4js = require('log4js');
var express = require('express');
log4js.configure({
 appenders: [{
  type: 'DateFile',
  filename: 'access.log',
  pattern: '-yyyy-MM-dd.log',
  alwaysIncludePattern: true,
  category: 'access'
 }]
});
var app = express();
app.use(log4js.connectLogger(log4js.getLogger('access'), { level: log4js.levels.INFO }));
app.get('/', function(req,res) {
 res.send('前端外刊评论');
});
app.listen(5000);
	

const log4js = require('log4js')
log4js.configure({
 replaceConsole: true,
 appenders: {
  stdout: {//控制台输出
   type: 'stdout'
  },
  req: {//请求日志
   type: 'dateFile',
   filename: 'logs/reqlog/',
   pattern: 'req-yyyy-MM-dd.log',
   alwaysIncludePattern: true
  },
  err: {//错误日志
   type: 'dateFile',
   filename: 'logs/errlog/',
   pattern: 'err-yyyy-MM-dd.log',
   alwaysIncludePattern: true
  },
  oth: {//其他日志
   type: 'dateFile',
   filename: 'logs/othlog/',
   pattern: 'oth-yyyy-MM-dd.log',
   alwaysIncludePattern: true
  }
 },
 categories: {
  default: { appenders: ['stdout', 'req'], level: 'debug' },//appenders:采用的appender,取appenders项,level:设置级别
  err: { appenders: ['stdout', 'err'], level: 'error' },
  oth: { appenders: ['stdout', 'oth'], level: 'info' }
 }
})
exports.getLogger = function (name) {//name取categories项
 return log4js.getLogger(name || 'default')
}
exports.useLogger = function (app, logger) {//用来与express结合
 app.use(log4js.connectLogger(logger || log4js.getLogger('default'), {
  format: '[:remote-addr :method :url :status :response-timems][:referrer HTTP/:http-version :user-agent]'//自定义输出格式
 }))
}

https://github.com/log4js-node 官方GIT
https://www.cnblogs.com/yjfengwen/p/3827217.html
